{ns hl7-fhir-uv-sdc.sdc-library,
 import #{zen.fhir hl7-fhir-r4-core.cqllibrary},
 schema {:zen/tags #{zen.fhir/profile-schema zen/schema},
         :zen/desc "Defines how a Library is used as a logic computable library within the ONC's Structured Data Capture standard.",
         :zen.fhir/type "Library",
         :zen.fhir/profileUri "http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-library",
         :zen.fhir/version "0.6.30-1",
         :confirms #{zen.fhir/Resource
                     hl7-fhir-r4-core.cqllibrary/schema},
         :type zen/map,
         :keys {:subject {:fhir/polymorphic true,
                          :type zen/map,
                          :fhir/flags #{:MS}},
                :relatedArtifact {:type zen/vector,
                                  :every {:type zen/map,
                                          :keys {:display {:fhir/flags #{:MS}},
                                                 :url {:fhir/flags #{:MS}}},
                                          :require #{:url :display},
                                          :fhir/flags #{:MS}}},
                :parameter {:type zen/vector,
                            :every {:fhir/flags #{:MS}}},
                :dataRequirement {:type zen/vector,
                                  :every {:fhir/flags #{:MS}}},
                :content {:type zen/vector,
                          :slicing {:slices {"cqlContent" {:schema {:type zen/vector,
                                                                    :maxItems 1,
                                                                    :every {:type zen/map,
                                                                            :keys {:contentType {:const {:value "text/cql"},
                                                                                                 :fhir/flags #{:MS}}},
                                                                            :require #{:contentType
                                                                                       :data}}},
                                                           :filter {:engine :match,
                                                                    :match {:contentType "text/cql"}}},
                                             "fhirpathContent" {:schema {:type zen/vector,
                                                                         :maxItems 1,
                                                                         :every {:type zen/map,
                                                                                 :keys {:contentType {:const {:value "text/fhirpath"},
                                                                                                      :fhir/flags #{:MS}}},
                                                                                 :require #{:contentType
                                                                                            :data}}},
                                                                :filter {:engine :match,
                                                                         :match {:contentType "text/fhirpath"}}},
                                             "queryContent" {:schema {:type zen/vector,
                                                                      :maxItems 1,
                                                                      :every {:type zen/map,
                                                                              :keys {:contentType {:const {:value "application/x-fhir-query"},
                                                                                                   :fhir/flags #{:MS}}},
                                                                              :require #{:contentType
                                                                                         :data}}},
                                                             :filter {:engine :match,
                                                                      :match {:contentType "application/x-fhir-query"}}}}},
                          :every {:fhir/flags #{:MS}}}}}}
